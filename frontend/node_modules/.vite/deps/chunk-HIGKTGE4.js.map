{
  "version": 3,
  "sources": ["../../vuetify/src/composables/layout.ts"],
  "sourcesContent": ["// Composables\nimport { useResizeObserver } from '@/composables/resizeObserver'\n\n// Utilities\nimport {\n  computed,\n  inject,\n  onActivated,\n  onBeforeUnmount,\n  onDeactivated,\n  onMounted,\n  provide,\n  reactive,\n  ref,\n  shallowRef,\n} from 'vue'\nimport { convertToUnit, findChildrenWithProvide, getCurrentInstance, getUid, propsFactory } from '@/util'\n\n// Types\nimport type { ComponentInternalInstance, CSSProperties, InjectionKey, Prop, Ref } from 'vue'\n\ntype Position = 'top' | 'left' | 'right' | 'bottom'\n\ninterface Layer {\n  top: number\n  bottom: number\n  left: number\n  right: number\n}\n\ninterface LayoutItem extends Layer {\n  id: string\n  size: number\n  position: Position\n}\n\ninterface LayoutProvide {\n  register: (\n    vm: ComponentInternalInstance,\n    options: {\n      id: string\n      order: Ref<number>\n      position: Ref<Position>\n      layoutSize: Ref<number | string>\n      elementSize: Ref<number | string | undefined>\n      active: Ref<boolean>\n      disableTransitions?: Ref<boolean>\n      absolute: Ref<boolean | undefined>\n    }\n  ) => {\n    layoutItemStyles: Ref<CSSProperties>\n    layoutItemScrimStyles: Ref<CSSProperties>\n    zIndex: Ref<number>\n  }\n  unregister: (id: string) => void\n  mainRect: Ref<Layer>\n  mainStyles: Ref<CSSProperties>\n  getLayoutItem: (id: string) => LayoutItem | undefined\n  items: Ref<LayoutItem[]>\n  layoutRect: Ref<DOMRectReadOnly | undefined>\n  rootZIndex: Ref<number>\n}\n\nexport const VuetifyLayoutKey: InjectionKey<LayoutProvide> = Symbol.for('vuetify:layout')\nexport const VuetifyLayoutItemKey: InjectionKey<{ id: string }> = Symbol.for('vuetify:layout-item')\n\nconst ROOT_ZINDEX = 1000\n\nexport const makeLayoutProps = propsFactory({\n  overlaps: {\n    type: Array,\n    default: () => ([]),\n  } as Prop<string[]>,\n  fullHeight: Boolean,\n}, 'layout')\n\n// Composables\nexport const makeLayoutItemProps = propsFactory({\n  name: {\n    type: String,\n  },\n  order: {\n    type: [Number, String],\n    default: 0,\n  },\n  absolute: Boolean,\n}, 'layout-item')\n\nexport function useLayout () {\n  const layout = inject(VuetifyLayoutKey)\n\n  if (!layout) throw new Error('[Vuetify] Could not find injected layout')\n\n  return {\n    getLayoutItem: layout.getLayoutItem,\n    mainRect: layout.mainRect,\n    mainStyles: layout.mainStyles,\n  }\n}\n\nexport function useLayoutItem (options: {\n  id: string | undefined\n  order: Ref<number>\n  position: Ref<Position>\n  layoutSize: Ref<number | string>\n  elementSize: Ref<number | string | undefined>\n  active: Ref<boolean>\n  disableTransitions?: Ref<boolean>\n  absolute: Ref<boolean | undefined>\n}) {\n  const layout = inject(VuetifyLayoutKey)\n\n  if (!layout) throw new Error('[Vuetify] Could not find injected layout')\n\n  const id = options.id ?? `layout-item-${getUid()}`\n\n  const vm = getCurrentInstance('useLayoutItem')\n\n  provide(VuetifyLayoutItemKey, { id })\n\n  const isKeptAlive = shallowRef(false)\n  onDeactivated(() => isKeptAlive.value = true)\n  onActivated(() => isKeptAlive.value = false)\n\n  const {\n    layoutItemStyles,\n    layoutItemScrimStyles,\n  } = layout.register(vm, {\n    ...options,\n    active: computed(() => isKeptAlive.value ? false : options.active.value),\n    id,\n  })\n\n  onBeforeUnmount(() => layout.unregister(id))\n\n  return { layoutItemStyles, layoutRect: layout.layoutRect, layoutItemScrimStyles }\n}\n\nconst generateLayers = (\n  layout: string[],\n  positions: Map<string, Ref<Position>>,\n  layoutSizes: Map<string, Ref<number | string>>,\n  activeItems: Map<string, Ref<boolean>>,\n): { id: string, layer: Layer }[] => {\n  let previousLayer: Layer = { top: 0, left: 0, right: 0, bottom: 0 }\n  const layers = [{ id: '', layer: { ...previousLayer } }]\n  for (const id of layout) {\n    const position = positions.get(id)\n    const amount = layoutSizes.get(id)\n    const active = activeItems.get(id)\n    if (!position || !amount || !active) continue\n\n    const layer = {\n      ...previousLayer,\n      [position.value]: parseInt(previousLayer[position.value], 10) + (active.value ? parseInt(amount.value, 10) : 0),\n    }\n\n    layers.push({\n      id,\n      layer,\n    })\n\n    previousLayer = layer\n  }\n\n  return layers\n}\n\nexport function createLayout (props: { overlaps?: string[], fullHeight?: boolean }) {\n  const parentLayout = inject(VuetifyLayoutKey, null)\n  const rootZIndex = computed(() => parentLayout ? parentLayout.rootZIndex.value - 100 : ROOT_ZINDEX)\n  const registered = ref<string[]>([])\n  const positions = reactive(new Map<string, Ref<Position>>())\n  const layoutSizes = reactive(new Map<string, Ref<number | string>>())\n  const priorities = reactive(new Map<string, Ref<number>>())\n  const activeItems = reactive(new Map<string, Ref<boolean>>())\n  const disabledTransitions = reactive(new Map<string, Ref<boolean>>())\n  const { resizeRef, contentRect: layoutRect } = useResizeObserver()\n\n  const computedOverlaps = computed(() => {\n    const map = new Map<string, { position: Position, amount: number }>()\n    const overlaps = props.overlaps ?? []\n    for (const overlap of overlaps.filter(item => item.includes(':'))) {\n      const [top, bottom] = overlap.split(':')\n      if (!registered.value.includes(top) || !registered.value.includes(bottom)) continue\n\n      const topPosition = positions.get(top)\n      const bottomPosition = positions.get(bottom)\n      const topAmount = layoutSizes.get(top)\n      const bottomAmount = layoutSizes.get(bottom)\n\n      if (!topPosition || !bottomPosition || !topAmount || !bottomAmount) continue\n\n      map.set(bottom, { position: topPosition.value, amount: parseInt(topAmount.value, 10) })\n      map.set(top, { position: bottomPosition.value, amount: -parseInt(bottomAmount.value, 10) })\n    }\n\n    return map\n  })\n\n  const layers = computed(() => {\n    const uniquePriorities = [...new Set([...priorities.values()].map(p => p.value))].sort((a, b) => a - b)\n    const layout = []\n    for (const p of uniquePriorities) {\n      const items = registered.value.filter(id => priorities.get(id)?.value === p)\n      layout.push(...items)\n    }\n    return generateLayers(layout, positions, layoutSizes, activeItems)\n  })\n\n  const transitionsEnabled = computed(() => {\n    return !Array.from(disabledTransitions.values()).some(ref => ref.value)\n  })\n\n  const mainRect = computed(() => {\n    return layers.value[layers.value.length - 1].layer\n  })\n\n  const mainStyles = computed<CSSProperties>(() => {\n    return {\n      '--v-layout-left': convertToUnit(mainRect.value.left),\n      '--v-layout-right': convertToUnit(mainRect.value.right),\n      '--v-layout-top': convertToUnit(mainRect.value.top),\n      '--v-layout-bottom': convertToUnit(mainRect.value.bottom),\n      ...(transitionsEnabled.value ? undefined : { transition: 'none' }),\n    }\n  })\n\n  const items = computed(() => {\n    return layers.value.slice(1).map(({ id }, index) => {\n      const { layer } = layers.value[index]\n      const size = layoutSizes.get(id)\n      const position = positions.get(id)\n\n      return {\n        id,\n        ...layer,\n        size: Number(size!.value),\n        position: position!.value,\n      }\n    })\n  })\n\n  const getLayoutItem = (id: string) => {\n    return items.value.find(item => item.id === id)\n  }\n\n  const rootVm = getCurrentInstance('createLayout')\n\n  const isMounted = shallowRef(false)\n  onMounted(() => {\n    isMounted.value = true\n  })\n\n  provide(VuetifyLayoutKey, {\n    register: (\n      vm: ComponentInternalInstance,\n      {\n        id,\n        order,\n        position,\n        layoutSize,\n        elementSize,\n        active,\n        disableTransitions,\n        absolute,\n      }\n    ) => {\n      priorities.set(id, order)\n      positions.set(id, position)\n      layoutSizes.set(id, layoutSize)\n      activeItems.set(id, active)\n      disableTransitions && disabledTransitions.set(id, disableTransitions)\n\n      const instances = findChildrenWithProvide(VuetifyLayoutItemKey, rootVm?.vnode)\n      const instanceIndex = instances.indexOf(vm)\n\n      if (instanceIndex > -1) registered.value.splice(instanceIndex, 0, id)\n      else registered.value.push(id)\n\n      const index = computed(() => items.value.findIndex(i => i.id === id))\n      const zIndex = computed(() => rootZIndex.value + (layers.value.length * 2) - (index.value * 2))\n\n      const layoutItemStyles = computed<CSSProperties>(() => {\n        const isHorizontal = position.value === 'left' || position.value === 'right'\n        const isOppositeHorizontal = position.value === 'right'\n        const isOppositeVertical = position.value === 'bottom'\n\n        const styles = {\n          [position.value]: 0,\n          zIndex: zIndex.value,\n          transform: `translate${isHorizontal ? 'X' : 'Y'}(${(active.value ? 0 : -110) * (isOppositeHorizontal || isOppositeVertical ? -1 : 1)}%)`,\n          position: absolute.value || rootZIndex.value !== ROOT_ZINDEX ? 'absolute' : 'fixed',\n          ...(transitionsEnabled.value ? undefined : { transition: 'none' }),\n        } as const\n\n        if (!isMounted.value) return styles\n\n        const item = items.value[index.value]\n\n        if (!item) throw new Error(`[Vuetify] Could not find layout item \"${id}\"`)\n\n        const overlap = computedOverlaps.value.get(id)\n        if (overlap) {\n          item[overlap.position] += overlap.amount\n        }\n\n        return {\n          ...styles,\n          height:\n            isHorizontal ? `calc(100% - ${item.top}px - ${item.bottom}px)`\n            : elementSize.value ? `${elementSize.value}px`\n            : undefined,\n          left: isOppositeHorizontal ? undefined : `${item.left}px`,\n          right: isOppositeHorizontal ? `${item.right}px` : undefined,\n          top: position.value !== 'bottom' ? `${item.top}px` : undefined,\n          bottom: position.value !== 'top' ? `${item.bottom}px` : undefined,\n          width:\n            !isHorizontal ? `calc(100% - ${item.left}px - ${item.right}px)`\n            : elementSize.value ? `${elementSize.value}px`\n            : undefined,\n        }\n      })\n\n      const layoutItemScrimStyles = computed<CSSProperties>(() => ({\n        zIndex: zIndex.value - 1,\n      }))\n\n      return { layoutItemStyles, layoutItemScrimStyles, zIndex }\n    },\n    unregister: (id: string) => {\n      priorities.delete(id)\n      positions.delete(id)\n      layoutSizes.delete(id)\n      activeItems.delete(id)\n      disabledTransitions.delete(id)\n      registered.value = registered.value.filter(v => v !== id)\n    },\n    mainRect,\n    mainStyles,\n    getLayoutItem,\n    items,\n    layoutRect,\n    rootZIndex,\n  })\n\n  const layoutClasses = computed(() => [\n    'v-layout',\n    { 'v-layout--full-height': props.fullHeight },\n  ])\n\n  const layoutStyles = computed(() => ({\n    zIndex: parentLayout ? rootZIndex.value : undefined,\n    position: parentLayout ? 'relative' as const : undefined,\n    overflow: parentLayout ? 'hidden' : undefined,\n  }))\n\n  return {\n    layoutClasses,\n    layoutStyles,\n    getLayoutItem,\n    items,\n    layoutRect,\n    layoutRef: resizeRef,\n  }\n}\n"],
  "mappings": "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",
  "names": ["VuetifyLayoutKey", "Symbol", "for", "VuetifyLayoutItemKey", "ROOT_ZINDEX", "makeLayoutProps", "propsFactory", "overlaps", "type", "Array", "default", "fullHeight", "Boolean", "makeLayoutItemProps", "name", "String", "order", "Number", "absolute", "useLayout", "layout", "inject", "Error", "getLayoutItem", "mainRect", "mainStyles", "generateLayers", "layout", "positions", "layoutSizes", "activeItems", "previousLayer", "top", "left", "right", "bottom", "layers", "id", "layer", "position", "get", "amount", "active", "value", "parseInt", "push", "createLayout", "props", "parentLayout", "inject", "VuetifyLayoutKey", "rootZIndex", "computed", "ROOT_ZINDEX", "registered", "ref", "reactive", "Map", "priorities", "disabledTransitions", "resizeRef", "contentRect", "layoutRect", "useResizeObserver", "computedOverlaps", "map", "overlaps", "overlap", "filter", "item", "includes", "split", "topPosition", "bottomPosition", "topAmount", "bottomAmount", "set", "uniquePriorities", "Set", "values", "p", "sort", "a", "b", "items", "transitionsEnabled", "Array", "from", "some", "mainRect", "length", "mainStyles", "convertToUnit", "undefined", "transition", "slice", "_ref", "index", "size", "Number", "getLayoutItem", "find", "rootVm", "getCurrentInstance", "isMounted", "shallowRef", "onMounted", "provide", "register", "vm", "_ref2", "order", "layoutSize", "elementSize", "disableTransitions", "absolute", "instances", "findChildrenWithProvide", "VuetifyLayoutItemKey", "vnode", "instanceIndex", "indexOf", "splice", "findIndex", "i", "zIndex", "layoutItemStyles", "isHorizontal", "isOppositeHorizontal", "isOppositeVertical", "styles", "transform", "Error", "height", "width", "layoutItemScrimStyles", "unregister", "delete", "v", "layoutClasses", "fullHeight", "layoutStyles", "overflow", "layoutRef"]
}
