{
  "version": 3,
  "sources": ["../../vuetify/src/components/VChip/VChip.tsx", "../../vuetify/src/components/transitions/createTransition.ts", "../../vuetify/src/components/transitions/expand-transition.ts", "../../vuetify/src/components/transitions/dialog-transition.tsx", "../../vuetify/src/components/transitions/index.ts", "../../vuetify/src/components/VAvatar/VAvatar.tsx", "../../vuetify/src/components/VChipGroup/VChipGroup.tsx", "../../vuetify/src/components/VSlideGroup/VSlideGroup.tsx", "../../vuetify/src/components/VSlideGroup/helpers.ts"],
  "sourcesContent": ["/* eslint-disable complexity */\n// Styles\nimport './VChip.sass'\n\n// Components\nimport { VExpandXTransition } from '@/components/transitions'\nimport { VAvatar } from '@/components/VAvatar'\nimport { VChipGroupSymbol } from '@/components/VChipGroup/VChipGroup'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VIcon } from '@/components/VIcon'\n\n// Composables\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { makeComponentProps } from '@/composables/component'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeGroupItemProps, useGroupItem } from '@/composables/group'\nimport { IconValue } from '@/composables/icons'\nimport { useLocale } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeRouterProps, useLink } from '@/composables/router'\nimport { makeSizeProps, useSize } from '@/composables/size'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { genOverlays, makeVariantProps, useVariant } from '@/composables/variant'\n\n// Directives\nimport { Ripple } from '@/directives/ripple'\n\n// Utilities\nimport { computed } from 'vue'\nimport { EventProp, genericComponent, propsFactory } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { RippleDirectiveBinding } from '@/directives/ripple'\n\nexport type VChipSlots = {\n  default: {\n    isSelected: boolean | undefined\n    selectedClass: boolean | (string | undefined)[] | undefined\n    select: ((value: boolean) => void) | undefined\n    toggle: (() => void) | undefined\n    value: unknown\n    disabled: boolean\n  }\n  label: never\n  prepend: never\n  append: never\n  close: never\n  filter: never\n}\n\nexport const makeVChipProps = propsFactory({\n  activeClass: String,\n  appendAvatar: String,\n  appendIcon: IconValue,\n  closable: Boolean,\n  closeIcon: {\n    type: IconValue,\n    default: '$delete',\n  },\n  closeLabel: {\n    type: String,\n    default: '$vuetify.close',\n  },\n  draggable: Boolean,\n  filter: Boolean,\n  filterIcon: {\n    type: String,\n    default: '$complete',\n  },\n  label: Boolean,\n  link: {\n    type: Boolean,\n    default: undefined,\n  },\n  pill: Boolean,\n  prependAvatar: String,\n  prependIcon: IconValue,\n  ripple: {\n    type: [Boolean, Object] as PropType<RippleDirectiveBinding['value']>,\n    default: true,\n  },\n  text: String,\n  modelValue: {\n    type: Boolean,\n    default: true,\n  },\n\n  onClick: EventProp<[MouseEvent]>(),\n  onClickOnce: EventProp<[MouseEvent]>(),\n\n  ...makeBorderProps(),\n  ...makeComponentProps(),\n  ...makeDensityProps(),\n  ...makeElevationProps(),\n  ...makeGroupItemProps(),\n  ...makeRoundedProps(),\n  ...makeRouterProps(),\n  ...makeSizeProps(),\n  ...makeTagProps({ tag: 'span' }),\n  ...makeThemeProps(),\n  ...makeVariantProps({ variant: 'tonal' } as const),\n}, 'VChip')\n\nexport const VChip = genericComponent<VChipSlots>()({\n  name: 'VChip',\n\n  directives: { Ripple },\n\n  props: makeVChipProps(),\n\n  emits: {\n    'click:close': (e: MouseEvent) => true,\n    'update:modelValue': (value: boolean) => true,\n    'group:selected': (val: { value: boolean }) => true,\n    click: (e: MouseEvent | KeyboardEvent) => true,\n  },\n\n  setup (props, { attrs, emit, slots }) {\n    const { t } = useLocale()\n    const { borderClasses } = useBorder(props)\n    const { colorClasses, colorStyles, variantClasses } = useVariant(props)\n    const { densityClasses } = useDensity(props)\n    const { elevationClasses } = useElevation(props)\n    const { roundedClasses } = useRounded(props)\n    const { sizeClasses } = useSize(props)\n    const { themeClasses } = provideTheme(props)\n\n    const isActive = useProxiedModel(props, 'modelValue')\n    const group = useGroupItem(props, VChipGroupSymbol, false)\n    const link = useLink(props, attrs)\n    const isLink = computed(() => props.link !== false && link.isLink.value)\n    const isClickable = computed(() =>\n      !props.disabled &&\n      props.link !== false &&\n      (!!group || props.link || link.isClickable.value)\n    )\n    const closeProps = computed(() => ({\n      'aria-label': t(props.closeLabel),\n      onClick (e: MouseEvent) {\n        e.stopPropagation()\n\n        isActive.value = false\n\n        emit('click:close', e)\n      },\n    }))\n\n    function onClick (e: MouseEvent) {\n      emit('click', e)\n\n      if (!isClickable.value) return\n\n      link.navigate?.(e)\n      group?.toggle()\n    }\n\n    function onKeyDown (e: KeyboardEvent) {\n      if (e.key === 'Enter' || e.key === ' ') {\n        e.preventDefault()\n        onClick(e as any as MouseEvent)\n      }\n    }\n\n    return () => {\n      const Tag = (link.isLink.value) ? 'a' : props.tag\n      const hasAppendMedia = !!(props.appendIcon || props.appendAvatar)\n      const hasAppend = !!(hasAppendMedia || slots.append)\n      const hasClose = !!(slots.close || props.closable)\n      const hasFilter = !!(slots.filter || props.filter) && group\n      const hasPrependMedia = !!(props.prependIcon || props.prependAvatar)\n      const hasPrepend = !!(hasPrependMedia || slots.prepend)\n      const hasColor = !group || group.isSelected.value\n\n      return isActive.value && (\n        <Tag\n          class={[\n            'v-chip',\n            {\n              'v-chip--disabled': props.disabled,\n              'v-chip--label': props.label,\n              'v-chip--link': isClickable.value,\n              'v-chip--filter': hasFilter,\n              'v-chip--pill': props.pill,\n            },\n            themeClasses.value,\n            borderClasses.value,\n            hasColor ? colorClasses.value : undefined,\n            densityClasses.value,\n            elevationClasses.value,\n            roundedClasses.value,\n            sizeClasses.value,\n            variantClasses.value,\n            group?.selectedClass.value,\n            props.class,\n          ]}\n          style={[\n            hasColor ? colorStyles.value : undefined,\n            props.style,\n          ]}\n          disabled={ props.disabled || undefined }\n          draggable={ props.draggable }\n          href={ link.href.value }\n          tabindex={ isClickable.value ? 0 : undefined }\n          onClick={ onClick }\n          onKeydown={ isClickable.value && !isLink.value && onKeyDown }\n          v-ripple={[isClickable.value && props.ripple, null]}\n        >\n          { genOverlays(isClickable.value, 'v-chip') }\n\n          { hasFilter && (\n            <VExpandXTransition key=\"filter\">\n              <div\n                class=\"v-chip__filter\"\n                v-show={ group.isSelected.value }\n              >\n                { !slots.filter ? (\n                  <VIcon\n                    key=\"filter-icon\"\n                    icon={ props.filterIcon }\n                  />\n                ) : (\n                  <VDefaultsProvider\n                    key=\"filter-defaults\"\n                    disabled={ !props.filterIcon }\n                    defaults={{\n                      VIcon: { icon: props.filterIcon },\n                    }}\n                    v-slots:default={ slots.filter }\n                  />\n                )}\n              </div>\n            </VExpandXTransition>\n          )}\n\n          { hasPrepend && (\n            <div key=\"prepend\" class=\"v-chip__prepend\">\n              { !slots.prepend ? (\n                <>\n                  { props.prependIcon && (\n                    <VIcon\n                      key=\"prepend-icon\"\n                      icon={ props.prependIcon }\n                      start\n                    />\n                  )}\n\n                  { props.prependAvatar && (\n                    <VAvatar\n                      key=\"prepend-avatar\"\n                      image={ props.prependAvatar }\n                      start\n                    />\n                  )}\n                </>\n              ) : (\n                <VDefaultsProvider\n                  key=\"prepend-defaults\"\n                  disabled={ !hasPrependMedia }\n                  defaults={{\n                    VAvatar: {\n                      image: props.prependAvatar,\n                      start: true,\n                    },\n                    VIcon: {\n                      icon: props.prependIcon,\n                      start: true,\n                    },\n                  }}\n                  v-slots:default={ slots.prepend }\n                />\n              )}\n            </div>\n          )}\n\n          <div class=\"v-chip__content\">\n            { slots.default?.({\n              isSelected: group?.isSelected.value,\n              selectedClass: group?.selectedClass.value,\n              select: group?.select,\n              toggle: group?.toggle,\n              value: group?.value.value,\n              disabled: props.disabled,\n            }) ?? props.text }\n          </div>\n\n          { hasAppend && (\n            <div key=\"append\" class=\"v-chip__append\">\n              { !slots.append ? (\n                <>\n                  { props.appendIcon && (\n                    <VIcon\n                      key=\"append-icon\"\n                      end\n                      icon={ props.appendIcon }\n                    />\n                  )}\n\n                  { props.appendAvatar && (\n                    <VAvatar\n                      key=\"append-avatar\"\n                      end\n                      image={ props.appendAvatar }\n                    />\n                  )}\n                </>\n              ) : (\n                <VDefaultsProvider\n                  key=\"append-defaults\"\n                  disabled={ !hasAppendMedia }\n                  defaults={{\n                    VAvatar: {\n                      end: true,\n                      image: props.appendAvatar,\n                    },\n                    VIcon: {\n                      end: true,\n                      icon: props.appendIcon,\n                    },\n                  }}\n                  v-slots:default={ slots.append }\n                />\n              )}\n            </div>\n          )}\n\n          { hasClose && (\n            <button\n              key=\"close\"\n              class=\"v-chip__close\"\n              type=\"button\"\n              { ...closeProps.value }\n            >\n              { !slots.close ? (\n                <VIcon\n                  key=\"close-icon\"\n                  icon={ props.closeIcon }\n                  size=\"x-small\"\n                />\n              ) : (\n                <VDefaultsProvider\n                  key=\"close-defaults\"\n                  defaults={{\n                    VIcon: {\n                      icon: props.closeIcon,\n                      size: 'x-small',\n                    },\n                  }}\n                  v-slots:default={ slots.close }\n                />\n              )}\n            </button>\n          )}\n        </Tag>\n      )\n    }\n  },\n})\n\nexport type VChip = InstanceType<typeof VChip>\n", "// Utilities\nimport { h, Transition, TransitionGroup } from 'vue'\nimport { genericComponent, propsFactory } from '@/util'\n\n// Types\nimport type { FunctionalComponent, PropType } from 'vue'\n\nexport const makeTransitionProps = propsFactory({\n  disabled: Boolean,\n  group: Boolean,\n  hideOnLeave: Boolean,\n  leaveAbsolute: Boolean,\n  mode: String,\n  origin: String,\n}, 'transition')\n\nexport function createCssTransition (\n  name: string,\n  origin?: string,\n  mode?: string\n) {\n  return genericComponent()({\n    name,\n\n    props: makeTransitionProps({\n      mode,\n      origin,\n    }),\n\n    setup (props, { slots }) {\n      const functions = {\n        onBeforeEnter (el: HTMLElement) {\n          if (props.origin) {\n            el.style.transformOrigin = props.origin\n          }\n        },\n        onLeave (el: HTMLElement) {\n          if (props.leaveAbsolute) {\n            const { offsetTop, offsetLeft, offsetWidth, offsetHeight } = el\n            el._transitionInitialStyles = {\n              position: el.style.position,\n              top: el.style.top,\n              left: el.style.left,\n              width: el.style.width,\n              height: el.style.height,\n            }\n            el.style.position = 'absolute'\n            el.style.top = `${offsetTop}px`\n            el.style.left = `${offsetLeft}px`\n            el.style.width = `${offsetWidth}px`\n            el.style.height = `${offsetHeight}px`\n          }\n\n          if (props.hideOnLeave) {\n            el.style.setProperty('display', 'none', 'important')\n          }\n        },\n        onAfterLeave (el: HTMLElement) {\n          if (props.leaveAbsolute && el?._transitionInitialStyles) {\n            const { position, top, left, width, height } = el._transitionInitialStyles\n            delete el._transitionInitialStyles\n            el.style.position = position || ''\n            el.style.top = top || ''\n            el.style.left = left || ''\n            el.style.width = width || ''\n            el.style.height = height || ''\n          }\n        },\n      }\n\n      return () => {\n        const tag = props.group ? TransitionGroup : Transition\n\n        return h(tag as FunctionalComponent, {\n          name: props.disabled ? '' : name,\n          css: !props.disabled,\n          ...(props.group ? undefined : { mode: props.mode }),\n          ...(props.disabled ? {} : functions),\n        }, slots.default)\n      }\n    },\n  })\n}\n\nexport function createJavascriptTransition (\n  name: string,\n  functions: Record<string, any>,\n  mode = 'in-out'\n) {\n  return genericComponent()({\n    name,\n\n    props: {\n      mode: {\n        type: String as PropType<'in-out' | 'out-in' | 'default'>,\n        default: mode,\n      },\n      disabled: Boolean,\n    },\n\n    setup (props, { slots }) {\n      return () => {\n        return h(Transition, {\n          name: props.disabled ? '' : name,\n          css: !props.disabled,\n          // mode: props.mode, // TODO: vuejs/vue-next#3104\n          ...(props.disabled ? {} : functions),\n        }, slots.default)\n      }\n    },\n  })\n}\n", "// Utilities\nimport { camelize } from 'vue'\n\ninterface HTMLExpandElement extends HTMLElement {\n  _parent?: (Node & ParentNode & HTMLElement) | null\n  _initialStyle?: {\n    transition: string\n    overflow: string\n    height?: string | null\n    width?: string | null\n  }\n}\n\nexport default function (expandedParentClass = '', x = false) {\n  const sizeProperty = x ? 'width' : 'height' as 'width' | 'height'\n  const offsetProperty = camelize(`offset-${sizeProperty}`) as 'offsetHeight' | 'offsetWidth'\n\n  return {\n    onBeforeEnter (el: HTMLExpandElement) {\n      el._parent = el.parentNode as (Node & ParentNode & HTMLElement) | null\n      el._initialStyle = {\n        transition: el.style.transition,\n        overflow: el.style.overflow,\n        [sizeProperty]: el.style[sizeProperty],\n      }\n    },\n\n    onEnter (el: HTMLExpandElement) {\n      const initialStyle = el._initialStyle!\n\n      el.style.setProperty('transition', 'none', 'important')\n      // Hide overflow to account for collapsed margins in the calculated height\n      el.style.overflow = 'hidden'\n      const offset = `${el[offsetProperty]}px`\n\n      el.style[sizeProperty] = '0'\n\n      void el.offsetHeight // force reflow\n\n      el.style.transition = initialStyle.transition\n\n      if (expandedParentClass && el._parent) {\n        el._parent.classList.add(expandedParentClass)\n      }\n\n      requestAnimationFrame(() => {\n        el.style[sizeProperty] = offset\n      })\n    },\n\n    onAfterEnter: resetStyles,\n    onEnterCancelled: resetStyles,\n\n    onLeave (el: HTMLExpandElement) {\n      el._initialStyle = {\n        transition: '',\n        overflow: el.style.overflow,\n        [sizeProperty]: el.style[sizeProperty],\n      }\n\n      el.style.overflow = 'hidden'\n      el.style[sizeProperty] = `${el[offsetProperty]}px`\n      void el.offsetHeight // force reflow\n\n      requestAnimationFrame(() => (el.style[sizeProperty] = '0'))\n    },\n\n    onAfterLeave,\n    onLeaveCancelled: onAfterLeave,\n  }\n\n  function onAfterLeave (el: HTMLExpandElement) {\n    if (expandedParentClass && el._parent) {\n      el._parent.classList.remove(expandedParentClass)\n    }\n    resetStyles(el)\n  }\n\n  function resetStyles (el: HTMLExpandElement) {\n    const size = el._initialStyle![sizeProperty]\n    el.style.overflow = el._initialStyle!.overflow\n    if (size != null) el.style[sizeProperty] = size\n    delete el._initialStyle\n  }\n}\n", "// Utilities\nimport { Transition } from 'vue'\nimport {\n  acceleratedEasing,\n  animate,\n  deceleratedEasing,\n  genericComponent,\n  nullifyTransforms,\n  propsFactory,\n  standardEasing,\n} from '@/util'\nimport { getTargetBox } from '@/util/box'\n\n// Types\nimport type { PropType } from 'vue'\n\nexport const makeVDialogTransitionProps = propsFactory({\n  target: [Object, Array] as PropType<HTMLElement | [x: number, y: number]>,\n}, 'v-dialog-transition')\n\nexport const VDialogTransition = genericComponent()({\n  name: 'VDialogTransition',\n\n  props: makeVDialogTransitionProps(),\n\n  setup (props, { slots }) {\n    const functions = {\n      onBeforeEnter (el: Element) {\n        (el as HTMLElement).style.pointerEvents = 'none'\n        ;(el as HTMLElement).style.visibility = 'hidden'\n      },\n      async onEnter (el: Element, done: () => void) {\n        await new Promise(resolve => requestAnimationFrame(resolve))\n        await new Promise(resolve => requestAnimationFrame(resolve))\n        ;(el as HTMLElement).style.visibility = ''\n\n        const { x, y, sx, sy, speed } = getDimensions(props.target!, el as HTMLElement)\n\n        const animation = animate(el, [\n          { transform: `translate(${x}px, ${y}px) scale(${sx}, ${sy})`, opacity: 0 },\n          {},\n        ], {\n          duration: 225 * speed,\n          easing: deceleratedEasing,\n        })\n        getChildren(el)?.forEach(el => {\n          animate(el, [\n            { opacity: 0 },\n            { opacity: 0, offset: 0.33 },\n            {},\n          ], {\n            duration: 225 * 2 * speed,\n            easing: standardEasing,\n          })\n        })\n        animation.finished.then(() => done())\n      },\n      onAfterEnter (el: Element) {\n        (el as HTMLElement).style.removeProperty('pointer-events')\n      },\n      onBeforeLeave (el: Element) {\n        (el as HTMLElement).style.pointerEvents = 'none'\n      },\n      async onLeave (el: Element, done: () => void) {\n        await new Promise(resolve => requestAnimationFrame(resolve))\n\n        const { x, y, sx, sy, speed } = getDimensions(props.target!, el as HTMLElement)\n\n        const animation = animate(el, [\n          {},\n          { transform: `translate(${x}px, ${y}px) scale(${sx}, ${sy})`, opacity: 0 },\n        ], {\n          duration: 125 * speed,\n          easing: acceleratedEasing,\n        })\n        animation.finished.then(() => done())\n        getChildren(el)?.forEach(el => {\n          animate(el, [\n            {},\n            { opacity: 0, offset: 0.2 },\n            { opacity: 0 },\n          ], {\n            duration: 125 * 2 * speed,\n            easing: standardEasing,\n          })\n        })\n      },\n      onAfterLeave (el: Element) {\n        (el as HTMLElement).style.removeProperty('pointer-events')\n      },\n    }\n\n    return () => {\n      return props.target\n        ? (\n          <Transition\n            name=\"dialog-transition\"\n            { ...functions }\n            css={ false }\n            v-slots={ slots }\n          />\n        )\n        : <Transition name=\"dialog-transition\" v-slots={ slots } />\n    }\n  },\n})\n\n/** Animatable children (card, sheet, list) */\nfunction getChildren (el: Element) {\n  const els = el.querySelector(':scope > .v-card, :scope > .v-sheet, :scope > .v-list')?.children\n  return els && [...els]\n}\n\nfunction getDimensions (target: HTMLElement | [x: number, y: number], el: HTMLElement) {\n  const targetBox = getTargetBox(target)\n  const elBox = nullifyTransforms(el)\n  const [originX, originY] = getComputedStyle(el).transformOrigin.split(' ').map(v => parseFloat(v))\n\n  const [anchorSide, anchorOffset] = getComputedStyle(el).getPropertyValue('--v-overlay-anchor-origin').split(' ')\n\n  let offsetX = targetBox.left + targetBox.width / 2\n  if (anchorSide === 'left' || anchorOffset === 'left') {\n    offsetX -= targetBox.width / 2\n  } else if (anchorSide === 'right' || anchorOffset === 'right') {\n    offsetX += targetBox.width / 2\n  }\n\n  let offsetY = targetBox.top + targetBox.height / 2\n  if (anchorSide === 'top' || anchorOffset === 'top') {\n    offsetY -= targetBox.height / 2\n  } else if (anchorSide === 'bottom' || anchorOffset === 'bottom') {\n    offsetY += targetBox.height / 2\n  }\n\n  const tsx = targetBox.width / elBox.width\n  const tsy = targetBox.height / elBox.height\n  const maxs = Math.max(1, tsx, tsy)\n  const sx = tsx / maxs || 0\n  const sy = tsy / maxs || 0\n\n  // Animate elements larger than 12% of the screen area up to 1.5x slower\n  const asa = (elBox.width * elBox.height) / (window.innerWidth * window.innerHeight)\n  const speed = asa > 0.12\n    ? Math.min(1.5, (asa - 0.12) * 10 + 1)\n    : 1\n\n  return {\n    x: offsetX - (originX + elBox.left),\n    y: offsetY - (originY + elBox.top),\n    sx,\n    sy,\n    speed,\n  }\n}\n\nexport type VDialogTransition = InstanceType<typeof VDialogTransition>\n", "import {\n  createCssTransition,\n  createJavascriptTransition,\n} from './createTransition'\n\nimport ExpandTransitionGenerator from './expand-transition'\n\n// Component specific transitions\nexport const VFabTransition = createCssTransition('fab-transition', 'center center', 'out-in')\n\n// Generic transitions\nexport const VDialogBottomTransition = createCssTransition('dialog-bottom-transition')\nexport const VDialogTopTransition = createCssTransition('dialog-top-transition')\nexport const VFadeTransition = createCssTransition('fade-transition')\nexport const VScaleTransition = createCssTransition('scale-transition')\nexport const VScrollXTransition = createCssTransition('scroll-x-transition')\nexport const VScrollXReverseTransition = createCssTransition('scroll-x-reverse-transition')\nexport const VScrollYTransition = createCssTransition('scroll-y-transition')\nexport const VScrollYReverseTransition = createCssTransition('scroll-y-reverse-transition')\nexport const VSlideXTransition = createCssTransition('slide-x-transition')\nexport const VSlideXReverseTransition = createCssTransition('slide-x-reverse-transition')\nexport const VSlideYTransition = createCssTransition('slide-y-transition')\nexport const VSlideYReverseTransition = createCssTransition('slide-y-reverse-transition')\n\n// Javascript transitions\nexport const VExpandTransition = createJavascriptTransition('expand-transition', ExpandTransitionGenerator())\nexport const VExpandXTransition = createJavascriptTransition('expand-x-transition', ExpandTransitionGenerator('', true))\n\nexport { VDialogTransition } from './dialog-transition'\n\nexport type VFabTransition = InstanceType<typeof VFabTransition>\nexport type VDialogBottomTransition = InstanceType<typeof VDialogBottomTransition>\nexport type VDialogTopTransition = InstanceType<typeof VDialogTopTransition>\nexport type VFadeTransition = InstanceType<typeof VFadeTransition>\nexport type VScaleTransition = InstanceType<typeof VScaleTransition>\nexport type VScrollXTransition = InstanceType<typeof VScrollXTransition>\nexport type VScrollXReverseTransition = InstanceType<typeof VScrollXReverseTransition>\nexport type VScrollYTransition = InstanceType<typeof VScrollYTransition>\nexport type VScrollYReverseTransition = InstanceType<typeof VScrollYReverseTransition>\nexport type VSlideXTransition = InstanceType<typeof VSlideXTransition>\nexport type VSlideXReverseTransition = InstanceType<typeof VSlideXReverseTransition>\nexport type VSlideYTransition = InstanceType<typeof VSlideYTransition>\nexport type VSlideYReverseTransition = InstanceType<typeof VSlideYReverseTransition>\nexport type VExpandTransition = InstanceType<typeof VExpandTransition>\nexport type VExpandXTransition = InstanceType<typeof VExpandXTransition>\n", "// Styles\nimport './VAvatar.sass'\n\n// Components\nimport { VIcon } from '@/components/VIcon'\nimport { VImg } from '@/components/VImg'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { IconValue } from '@/composables/icons'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeSizeProps, useSize } from '@/composables/size'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { genOverlays, makeVariantProps, useVariant } from '@/composables/variant'\n\n// Utilities\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\nexport const makeVAvatarProps = propsFactory({\n  start: Boolean,\n  end: Boolean,\n  icon: IconValue,\n  image: String,\n  text: String,\n\n  ...makeComponentProps(),\n  ...makeDensityProps(),\n  ...makeRoundedProps(),\n  ...makeSizeProps(),\n  ...makeTagProps(),\n  ...makeThemeProps(),\n  ...makeVariantProps({ variant: 'flat' } as const),\n}, 'VAvatar')\n\nexport const VAvatar = genericComponent()({\n  name: 'VAvatar',\n\n  props: makeVAvatarProps(),\n\n  setup (props, { slots }) {\n    const { themeClasses } = provideTheme(props)\n    const { colorClasses, colorStyles, variantClasses } = useVariant(props)\n    const { densityClasses } = useDensity(props)\n    const { roundedClasses } = useRounded(props)\n    const { sizeClasses, sizeStyles } = useSize(props)\n\n    useRender(() => (\n      <props.tag\n        class={[\n          'v-avatar',\n          {\n            'v-avatar--start': props.start,\n            'v-avatar--end': props.end,\n          },\n          themeClasses.value,\n          colorClasses.value,\n          densityClasses.value,\n          roundedClasses.value,\n          sizeClasses.value,\n          variantClasses.value,\n          props.class,\n        ]}\n        style={[\n          colorStyles.value,\n          sizeStyles.value,\n          props.style,\n        ]}\n      >\n        { props.image\n          ? (<VImg key=\"image\" src={ props.image } alt=\"\" cover />)\n          : props.icon\n            ? (<VIcon key=\"icon\" icon={ props.icon } />)\n            : slots.default?.() ?? props.text\n        }\n\n        { genOverlays(false, 'v-avatar') }\n      </props.tag>\n    ))\n\n    return {}\n  },\n})\n\nexport type VAvatar = InstanceType<typeof VAvatar>\n", "// Styles\nimport './VChipGroup.sass'\n\n// Components\nimport { makeVSlideGroupProps, VSlideGroup } from '@/components/VSlideGroup/VSlideGroup'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { provideDefaults } from '@/composables/defaults'\nimport { makeGroupProps, useGroup } from '@/composables/group'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { makeVariantProps } from '@/composables/variant'\n\n// Utilities\nimport { toRef } from 'vue'\nimport { deepEqual, genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { GenericProps } from '@/util'\n\nexport const VChipGroupSymbol = Symbol.for('vuetify:v-chip-group')\n\nexport const makeVChipGroupProps = propsFactory({\n  column: Boolean,\n  filter: Boolean,\n  valueComparator: {\n    type: Function as PropType<typeof deepEqual>,\n    default: deepEqual,\n  },\n\n  ...makeVSlideGroupProps(),\n  ...makeComponentProps(),\n  ...makeGroupProps({ selectedClass: 'v-chip--selected' }),\n  ...makeTagProps(),\n  ...makeThemeProps(),\n  ...makeVariantProps({ variant: 'tonal' } as const),\n}, 'VChipGroup')\n\ntype VChipGroupSlots = {\n  default: {\n    isSelected: (id: number) => boolean\n    select: (id: number, value: boolean) => void\n    next: () => void\n    prev: () => void\n    selected: readonly number[]\n  }\n}\n\nexport const VChipGroup = genericComponent<new <T>(\n  props: {\n    modelValue?: T\n    'onUpdate:modelValue'?: (value: T) => void\n  },\n  slots: VChipGroupSlots,\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VChipGroup',\n\n  props: makeVChipGroupProps(),\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n  },\n\n  setup (props, { slots }) {\n    const { themeClasses } = provideTheme(props)\n    const { isSelected, select, next, prev, selected } = useGroup(props, VChipGroupSymbol)\n\n    provideDefaults({\n      VChip: {\n        color: toRef(props, 'color'),\n        disabled: toRef(props, 'disabled'),\n        filter: toRef(props, 'filter'),\n        variant: toRef(props, 'variant'),\n      },\n    })\n\n    useRender(() => {\n      const slideGroupProps = VSlideGroup.filterProps(props)\n\n      return (\n        <VSlideGroup\n          { ...slideGroupProps }\n          class={[\n            'v-chip-group',\n            {\n              'v-chip-group--column': props.column,\n            },\n            themeClasses.value,\n            props.class,\n          ]}\n          style={ props.style }\n        >\n          { slots.default?.({\n            isSelected,\n            select,\n            next,\n            prev,\n            selected: selected.value,\n          })}\n        </VSlideGroup>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VChipGroup = InstanceType<typeof VChipGroup>\n", "// Styles\nimport './VSlideGroup.sass'\n\n// Components\nimport { VFadeTransition } from '@/components/transitions'\nimport { VIcon } from '@/components/VIcon'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { makeDisplayProps, useDisplay } from '@/composables/display'\nimport { makeGroupProps, useGroup } from '@/composables/group'\nimport { IconValue } from '@/composables/icons'\nimport { useRtl } from '@/composables/locale'\nimport { useResizeObserver } from '@/composables/resizeObserver'\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { computed, shallowRef, watch } from 'vue'\nimport { bias, calculateCenteredOffset, calculateUpdatedOffset } from './helpers'\nimport { clamp, focusableChildren, genericComponent, IN_BROWSER, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { InjectionKey, PropType } from 'vue'\nimport type { GroupProvide } from '@/composables/group'\nimport type { GenericProps } from '@/util'\n\nexport const VSlideGroupSymbol: InjectionKey<GroupProvide> = Symbol.for('vuetify:v-slide-group')\n\ninterface SlideGroupSlot {\n  next: GroupProvide['next']\n  prev: GroupProvide['prev']\n  select: GroupProvide['select']\n  isSelected: GroupProvide['isSelected']\n}\n\ntype VSlideGroupSlots = {\n  default: SlideGroupSlot\n  prev: SlideGroupSlot\n  next: SlideGroupSlot\n}\n\nexport const makeVSlideGroupProps = propsFactory({\n  centerActive: Boolean,\n  direction: {\n    type: String as PropType<'horizontal' | 'vertical'>,\n    default: 'horizontal',\n  },\n  symbol: {\n    type: null,\n    default: VSlideGroupSymbol,\n  },\n  nextIcon: {\n    type: IconValue,\n    default: '$next',\n  },\n  prevIcon: {\n    type: IconValue,\n    default: '$prev',\n  },\n  showArrows: {\n    type: [Boolean, String],\n    validator: (v: any) => (\n      typeof v === 'boolean' || [\n        'always',\n        'desktop',\n        'mobile',\n      ].includes(v)\n    ),\n  },\n\n  ...makeComponentProps(),\n  ...makeDisplayProps(),\n  ...makeTagProps(),\n  ...makeGroupProps({\n    selectedClass: 'v-slide-group-item--active',\n  }),\n}, 'VSlideGroup')\n\nexport const VSlideGroup = genericComponent<new <T>(\n  props: {\n    modelValue?: T\n    'onUpdate:modelValue'?: (value: T) => void\n  },\n  slots: VSlideGroupSlots,\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VSlideGroup',\n\n  props: makeVSlideGroupProps(),\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n  },\n\n  setup (props, { slots }) {\n    const { isRtl } = useRtl()\n    const { displayClasses, mobile } = useDisplay(props)\n    const group = useGroup(props, props.symbol)\n    const isOverflowing = shallowRef(false)\n    const scrollOffset = shallowRef(0)\n    const containerSize = shallowRef(0)\n    const contentSize = shallowRef(0)\n    const isHorizontal = computed(() => props.direction === 'horizontal')\n\n    const { resizeRef: containerRef, contentRect: containerRect } = useResizeObserver()\n    const { resizeRef: contentRef, contentRect } = useResizeObserver()\n\n    const firstSelectedIndex = computed(() => {\n      if (!group.selected.value.length) return -1\n\n      return group.items.value.findIndex(item => item.id === group.selected.value[0])\n    })\n\n    const lastSelectedIndex = computed(() => {\n      if (!group.selected.value.length) return -1\n\n      return group.items.value.findIndex(item => item.id === group.selected.value[group.selected.value.length - 1])\n    })\n\n    if (IN_BROWSER) {\n      let frame = -1\n      watch(() => [group.selected.value, containerRect.value, contentRect.value, isHorizontal.value], () => {\n        cancelAnimationFrame(frame)\n        frame = requestAnimationFrame(() => {\n          if (containerRect.value && contentRect.value) {\n            const sizeProperty = isHorizontal.value ? 'width' : 'height'\n\n            containerSize.value = containerRect.value[sizeProperty]\n            contentSize.value = contentRect.value[sizeProperty]\n\n            isOverflowing.value = containerSize.value + 1 < contentSize.value\n          }\n\n          if (firstSelectedIndex.value >= 0 && contentRef.value) {\n            // TODO: Is this too naive? Should we store element references in group composable?\n            const selectedElement = contentRef.value.children[lastSelectedIndex.value] as HTMLElement\n\n            if (firstSelectedIndex.value === 0 || !isOverflowing.value) {\n              scrollOffset.value = 0\n            } else if (props.centerActive) {\n              scrollOffset.value = calculateCenteredOffset({\n                selectedElement,\n                containerSize: containerSize.value,\n                contentSize: contentSize.value,\n                isRtl: isRtl.value,\n                isHorizontal: isHorizontal.value,\n              })\n            } else if (isOverflowing.value) {\n              scrollOffset.value = calculateUpdatedOffset({\n                selectedElement,\n                containerSize: containerSize.value,\n                contentSize: contentSize.value,\n                isRtl: isRtl.value,\n                currentScrollOffset: scrollOffset.value,\n                isHorizontal: isHorizontal.value,\n              })\n            }\n          }\n        })\n      })\n    }\n\n    const disableTransition = shallowRef(false)\n\n    let startTouch = 0\n    let startOffset = 0\n\n    function onTouchstart (e: TouchEvent) {\n      const sizeProperty = isHorizontal.value ? 'clientX' : 'clientY'\n      const sign = isRtl.value && isHorizontal.value ? -1 : 1\n      startOffset = sign * scrollOffset.value\n      startTouch = e.touches[0][sizeProperty]\n      disableTransition.value = true\n    }\n\n    function onTouchmove (e: TouchEvent) {\n      if (!isOverflowing.value) return\n\n      const sizeProperty = isHorizontal.value ? 'clientX' : 'clientY'\n      const sign = isRtl.value && isHorizontal.value ? -1 : 1\n      scrollOffset.value = sign * (startOffset + startTouch - e.touches[0][sizeProperty])\n    }\n\n    function onTouchend (e: TouchEvent) {\n      const maxScrollOffset = contentSize.value - containerSize.value\n\n      if (scrollOffset.value < 0 || !isOverflowing.value) {\n        scrollOffset.value = 0\n      } else if (scrollOffset.value >= maxScrollOffset) {\n        scrollOffset.value = maxScrollOffset\n      }\n\n      disableTransition.value = false\n    }\n\n    function onScroll () {\n      if (!containerRef.value) return\n\n      containerRef.value[isHorizontal.value ? 'scrollLeft' : 'scrollTop'] = 0\n    }\n\n    const isFocused = shallowRef(false)\n    function onFocusin (e: FocusEvent) {\n      isFocused.value = true\n\n      if (!isOverflowing.value || !contentRef.value) return\n\n      // Focused element is likely to be the root of an item, so a\n      // breadth-first search will probably find it in the first iteration\n      for (const el of e.composedPath()) {\n        for (const item of contentRef.value.children) {\n          if (item === el) {\n            scrollOffset.value = calculateUpdatedOffset({\n              selectedElement: item as HTMLElement,\n              containerSize: containerSize.value,\n              contentSize: contentSize.value,\n              isRtl: isRtl.value,\n              currentScrollOffset: scrollOffset.value,\n              isHorizontal: isHorizontal.value,\n            })\n            return\n          }\n        }\n      }\n    }\n\n    function onFocusout (e: FocusEvent) {\n      isFocused.value = false\n    }\n\n    function onFocus (e: FocusEvent) {\n      if (\n        !isFocused.value &&\n        !(e.relatedTarget && contentRef.value?.contains(e.relatedTarget as Node))\n      ) focus()\n    }\n\n    function onKeydown (e: KeyboardEvent) {\n      if (!contentRef.value) return\n\n      if (isHorizontal.value) {\n        if (e.key === 'ArrowRight') {\n          focus(isRtl.value ? 'prev' : 'next')\n        } else if (e.key === 'ArrowLeft') {\n          focus(isRtl.value ? 'next' : 'prev')\n        }\n      } else {\n        if (e.key === 'ArrowDown') {\n          focus('next')\n        } else if (e.key === 'ArrowUp') {\n          focus('prev')\n        }\n      }\n\n      if (e.key === 'Home') {\n        focus('first')\n      } else if (e.key === 'End') {\n        focus('last')\n      }\n    }\n\n    function focus (location?: 'next' | 'prev' | 'first' | 'last') {\n      if (!contentRef.value) return\n\n      if (!location) {\n        const focusable = focusableChildren(contentRef.value)\n        focusable[0]?.focus()\n      } else if (location === 'next') {\n        const el = contentRef.value.querySelector(':focus')?.nextElementSibling as HTMLElement | undefined\n        if (el) el.focus()\n        else focus('first')\n      } else if (location === 'prev') {\n        const el = contentRef.value.querySelector(':focus')?.previousElementSibling as HTMLElement | undefined\n        if (el) el.focus()\n        else focus('last')\n      } else if (location === 'first') {\n        (contentRef.value.firstElementChild as HTMLElement)?.focus()\n      } else if (location === 'last') {\n        (contentRef.value.lastElementChild as HTMLElement)?.focus()\n      }\n    }\n\n    function scrollTo (location: 'prev' | 'next') {\n      const newAbsoluteOffset = scrollOffset.value + (location === 'prev' ? -1 : 1) * containerSize.value\n\n      scrollOffset.value = clamp(newAbsoluteOffset, 0, contentSize.value - containerSize.value)\n    }\n\n    const contentStyles = computed(() => {\n      // This adds friction when scrolling the 'wrong' way when at max offset\n      let scrollAmount = scrollOffset.value > contentSize.value - containerSize.value\n        ? -(contentSize.value - containerSize.value) + bias(contentSize.value - containerSize.value - scrollOffset.value)\n        : -scrollOffset.value\n\n      // This adds friction when scrolling the 'wrong' way when at min offset\n      if (scrollOffset.value <= 0) {\n        scrollAmount = bias(-scrollOffset.value)\n      }\n\n      const sign = isRtl.value && isHorizontal.value ? -1 : 1\n      return {\n        transform: `translate${isHorizontal.value ? 'X' : 'Y'}(${sign * scrollAmount}px)`,\n        transition: disableTransition.value ? 'none' : '',\n        willChange: disableTransition.value ? 'transform' : '',\n      }\n    })\n\n    const slotProps = computed(() => ({\n      next: group.next,\n      prev: group.prev,\n      select: group.select,\n      isSelected: group.isSelected,\n    }))\n\n    const hasAffixes = computed(() => {\n      switch (props.showArrows) {\n        // Always show arrows on desktop & mobile\n        case 'always': return true\n\n        // Always show arrows on desktop\n        case 'desktop': return !mobile.value\n\n        // Show arrows on mobile when overflowing.\n        // This matches the default 2.2 behavior\n        case true: return isOverflowing.value || Math.abs(scrollOffset.value) > 0\n\n        // Always show on mobile\n        case 'mobile': return (\n          mobile.value ||\n          (isOverflowing.value || Math.abs(scrollOffset.value) > 0)\n        )\n\n        // https://material.io/components/tabs#scrollable-tabs\n        // Always show arrows when\n        // overflowed on desktop\n        default: return (\n          !mobile.value &&\n          (isOverflowing.value || Math.abs(scrollOffset.value) > 0)\n        )\n      }\n    })\n\n    const hasPrev = computed(() => {\n      return Math.abs(scrollOffset.value) > 0\n    })\n\n    const hasNext = computed(() => {\n      // Check one scroll ahead to know the width of right-most item\n      return contentSize.value > Math.abs(scrollOffset.value) + containerSize.value\n    })\n\n    useRender(() => (\n      <props.tag\n        class={[\n          'v-slide-group',\n          {\n            'v-slide-group--vertical': !isHorizontal.value,\n            'v-slide-group--has-affixes': hasAffixes.value,\n            'v-slide-group--is-overflowing': isOverflowing.value,\n          },\n          displayClasses.value,\n          props.class,\n        ]}\n        style={ props.style }\n        tabindex={ (isFocused.value || group.selected.value.length) ? -1 : 0 }\n        onFocus={ onFocus }\n      >\n        { hasAffixes.value && (\n          <div\n            key=\"prev\"\n            class={[\n              'v-slide-group__prev',\n              { 'v-slide-group__prev--disabled': !hasPrev.value },\n            ]}\n            onClick={ () => hasPrev.value && scrollTo('prev') }\n          >\n            { slots.prev?.(slotProps.value) ?? (\n              <VFadeTransition>\n                <VIcon icon={ isRtl.value ? props.nextIcon : props.prevIcon }></VIcon>\n              </VFadeTransition>\n            )}\n          </div>\n        )}\n\n        <div\n          key=\"container\"\n          ref={ containerRef }\n          class=\"v-slide-group__container\"\n          onScroll={ onScroll }\n        >\n          <div\n            ref={ contentRef }\n            class=\"v-slide-group__content\"\n            style={ contentStyles.value }\n            onTouchstartPassive={ onTouchstart }\n            onTouchmovePassive={ onTouchmove }\n            onTouchendPassive={ onTouchend }\n            onFocusin={ onFocusin }\n            onFocusout={ onFocusout }\n            onKeydown={ onKeydown }\n          >\n            { slots.default?.(slotProps.value) }\n          </div>\n        </div>\n\n        { hasAffixes.value && (\n          <div\n            key=\"next\"\n            class={[\n              'v-slide-group__next',\n              { 'v-slide-group__next--disabled': !hasNext.value },\n            ]}\n            onClick={ () => hasNext.value && scrollTo('next') }\n          >\n            { slots.next?.(slotProps.value) ?? (\n              <VFadeTransition>\n                <VIcon icon={ isRtl.value ? props.prevIcon : props.nextIcon }></VIcon>\n              </VFadeTransition>\n            )}\n          </div>\n        )}\n      </props.tag>\n    ))\n\n    return {\n      selected: group.selected,\n      scrollTo,\n      scrollOffset,\n      focus,\n    }\n  },\n})\n\nexport type VSlideGroup = InstanceType<typeof VSlideGroup>\n", "export function bias (val: number) {\n  const c = 0.501\n  const x = Math.abs(val)\n  return Math.sign(val) * (x / ((1 / c - 2) * (1 - x) + 1))\n}\n\nexport function calculateUpdatedOffset ({\n  selectedElement,\n  containerSize,\n  contentSize,\n  isRtl,\n  currentScrollOffset,\n  isHorizontal,\n}: {\n  selectedElement: HTMLElement\n  containerSize: number\n  contentSize: number\n  isRtl: boolean\n  currentScrollOffset: number\n  isHorizontal: boolean\n}): number {\n  const clientSize = isHorizontal ? selectedElement.clientWidth : selectedElement.clientHeight\n  const offsetStart = isHorizontal ? selectedElement.offsetLeft : selectedElement.offsetTop\n  const adjustedOffsetStart = isRtl && isHorizontal ? (contentSize - offsetStart - clientSize) : offsetStart\n\n  const totalSize = containerSize + currentScrollOffset\n  const itemOffset = clientSize + adjustedOffsetStart\n  const additionalOffset = clientSize * 0.4\n\n  if (adjustedOffsetStart <= currentScrollOffset) {\n    currentScrollOffset = Math.max(adjustedOffsetStart - additionalOffset, 0)\n  } else if (totalSize <= itemOffset) {\n    currentScrollOffset = Math.min(currentScrollOffset - (totalSize - itemOffset - additionalOffset), contentSize - containerSize)\n  }\n\n  return currentScrollOffset\n}\n\nexport function calculateCenteredOffset ({\n  selectedElement,\n  containerSize,\n  contentSize,\n  isRtl,\n  isHorizontal,\n}: {\n  selectedElement: HTMLElement\n  containerSize: number\n  contentSize: number\n  isRtl: boolean\n  isHorizontal: boolean\n}): number {\n  const clientSize = isHorizontal ? selectedElement.clientWidth : selectedElement.clientHeight\n  const offsetStart = isHorizontal ? selectedElement.offsetLeft : selectedElement.offsetTop\n\n  const offsetCentered = isRtl && isHorizontal\n    ? contentSize - offsetStart - clientSize / 2 - containerSize / 2\n    : offsetStart + clientSize / 2 - containerSize / 2\n\n  return Math.min(contentSize - containerSize, Math.max(0, offsetCentered))\n}\n"],
  "mappings": "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",
  "names": ["makeTransitionProps", "propsFactory", "disabled", "Boolean", "group", "hideOnLeave", "leaveAbsolute", "mode", "String", "origin", "createCssTransition", "name", "genericComponent", "props", "setup", "_ref", "slots", "functions", "onBeforeEnter", "el", "style", "transformOrigin", "onLeave", "offsetTop", "offsetLeft", "offsetWidth", "offsetHeight", "_transitionInitialStyles", "position", "top", "left", "width", "height", "setProperty", "onAfterLeave", "tag", "TransitionGroup", "Transition", "h", "css", "undefined", "default", "createJavascriptTransition", "arguments", "length", "type", "_ref2", "expandedParentClass", "arguments", "length", "undefined", "x", "sizeProperty", "offsetProperty", "camelize", "onBeforeEnter", "el", "_parent", "parentNode", "_initialStyle", "transition", "style", "overflow", "onEnter", "initialStyle", "setProperty", "offset", "offsetHeight", "classList", "add", "requestAnimationFrame", "onAfterEnter", "resetStyles", "onEnterCancelled", "onLeave", "onAfterLeave", "onLeaveCancelled", "remove", "size", "makeVDialogTransitionProps", "propsFactory", "target", "Object", "Array", "VDialogTransition", "genericComponent", "name", "props", "setup", "_ref", "slots", "functions", "onBeforeEnter", "el", "style", "pointerEvents", "visibility", "onEnter", "done", "Promise", "resolve", "requestAnimationFrame", "x", "y", "sx", "sy", "speed", "getDimensions", "animation", "animate", "transform", "opacity", "duration", "easing", "deceleratedEasing", "getChildren", "forEach", "offset", "standardEasing", "finished", "then", "onAfterEnter", "removeProperty", "onBeforeLeave", "onLeave", "acceleratedEasing", "onAfterLeave", "_createVNode", "Transition", "_mergeProps", "els", "querySelector", "children", "targetBox", "getTargetBox", "elBox", "nullifyTransforms", "originX", "originY", "getComputedStyle", "transformOrigin", "split", "map", "v", "parseFloat", "anchorSide", "anchorOffset", "getPropertyValue", "offsetX", "left", "width", "offsetY", "top", "height", "tsx", "tsy", "maxs", "Math", "max", "asa", "window", "innerWidth", "innerHeight", "min", "VFabTransition", "createCssTransition", "VDialogBottomTransition", "VDialogTopTransition", "VFadeTransition", "VScaleTransition", "VScrollXTransition", "VScrollXReverseTransition", "VScrollYTransition", "VScrollYReverseTransition", "VSlideXTransition", "VSlideXReverseTransition", "VSlideYTransition", "VSlideYReverseTransition", "VExpandTransition", "createJavascriptTransition", "ExpandTransitionGenerator", "VExpandXTransition", "makeVAvatarProps", "propsFactory", "start", "Boolean", "end", "icon", "IconValue", "image", "String", "text", "makeComponentProps", "makeDensityProps", "makeRoundedProps", "makeSizeProps", "makeTagProps", "makeThemeProps", "makeVariantProps", "variant", "VAvatar", "genericComponent", "name", "props", "setup", "_ref", "slots", "themeClasses", "provideTheme", "colorClasses", "colorStyles", "variantClasses", "useVariant", "densityClasses", "useDensity", "roundedClasses", "useRounded", "sizeClasses", "sizeStyles", "useSize", "useRender", "_createVNode", "tag", "value", "class", "style", "default", "VImg", "VIcon", "genOverlays", "bias", "val", "c", "x", "Math", "abs", "sign", "calculateUpdatedOffset", "_ref", "selectedElement", "containerSize", "contentSize", "isRtl", "currentScrollOffset", "isHorizontal", "clientSize", "clientWidth", "clientHeight", "offsetStart", "offsetLeft", "offsetTop", "adjustedOffsetStart", "totalSize", "itemOffset", "additionalOffset", "max", "min", "calculateCenteredOffset", "_ref2", "offsetCentered", "VSlideGroupSymbol", "Symbol", "for", "makeVSlideGroupProps", "propsFactory", "centerActive", "Boolean", "direction", "type", "String", "default", "symbol", "nextIcon", "IconValue", "prevIcon", "showArrows", "validator", "v", "includes", "makeComponentProps", "makeDisplayProps", "makeTagProps", "makeGroupProps", "selectedClass", "VSlideGroup", "genericComponent", "name", "props", "emits", "value", "setup", "_ref", "slots", "isRtl", "useRtl", "displayClasses", "mobile", "useDisplay", "group", "useGroup", "isOverflowing", "shallowRef", "scrollOffset", "containerSize", "contentSize", "isHorizontal", "computed", "resizeRef", "containerRef", "contentRect", "containerRect", "useResizeObserver", "contentRef", "firstSelectedIndex", "selected", "length", "items", "findIndex", "item", "id", "lastSelectedIndex", "IN_BROWSER", "frame", "watch", "cancelAnimationFrame", "requestAnimationFrame", "sizeProperty", "selectedElement", "children", "calculateCenteredOffset", "calculateUpdatedOffset", "currentScrollOffset", "disableTransition", "startTouch", "startOffset", "onTouchstart", "e", "sign", "touches", "onTouchmove", "onTouchend", "maxScrollOffset", "onScroll", "isFocused", "onFocusin", "el", "composedPath", "onFocusout", "onFocus", "relatedTarget", "contains", "focus", "onKeydown", "key", "location", "focusable", "focusableChildren", "querySelector", "nextElementSibling", "previousElementSibling", "firstElementChild", "lastElementChild", "scrollTo", "newAbsoluteOffset", "clamp", "contentStyles", "scrollAmount", "bias", "transform", "transition", "willChange", "slotProps", "next", "prev", "select", "isSelected", "hasAffixes", "Math", "abs", "hasPrev", "hasNext", "useRender", "_createVNode", "tag", "class", "style", "onClick", "VFadeTransition", "VIcon", "VChipGroupSymbol", "Symbol", "for", "makeVChipGroupProps", "propsFactory", "column", "Boolean", "filter", "valueComparator", "type", "Function", "default", "deepEqual", "makeVSlideGroupProps", "makeComponentProps", "makeGroupProps", "selectedClass", "makeTagProps", "makeThemeProps", "makeVariantProps", "variant", "VChipGroup", "genericComponent", "name", "props", "emits", "value", "setup", "_ref", "slots", "themeClasses", "provideTheme", "isSelected", "select", "next", "prev", "selected", "useGroup", "provideDefaults", "VChip", "color", "toRef", "disabled", "useRender", "slideGroupProps", "VSlideGroup", "filterProps", "_createVNode", "_mergeProps", "class", "style", "makeVChipProps", "propsFactory", "activeClass", "String", "appendAvatar", "appendIcon", "IconValue", "closable", "Boolean", "closeIcon", "type", "default", "closeLabel", "draggable", "filter", "filterIcon", "label", "link", "undefined", "pill", "prependAvatar", "prependIcon", "ripple", "Object", "text", "modelValue", "onClick", "EventProp", "onClickOnce", "makeBorderProps", "makeComponentProps", "makeDensityProps", "makeElevationProps", "makeGroupItemProps", "makeRoundedProps", "makeRouterProps", "makeSizeProps", "makeTagProps", "tag", "makeThemeProps", "makeVariantProps", "variant", "VChip", "genericComponent", "name", "directives", "Ripple", "props", "emits", "e", "value", "val", "click", "setup", "_ref", "attrs", "emit", "slots", "t", "useLocale", "borderClasses", "useBorder", "colorClasses", "colorStyles", "variantClasses", "useVariant", "densityClasses", "useDensity", "elevationClasses", "useElevation", "roundedClasses", "useRounded", "sizeClasses", "useSize", "themeClasses", "provideTheme", "isActive", "useProxiedModel", "group", "useGroupItem", "VChipGroupSymbol", "useLink", "isLink", "computed", "isClickable", "disabled", "closeProps", "stopPropagation", "navigate", "toggle", "onKeyDown", "key", "preventDefault", "Tag", "hasAppendMedia", "hasAppend", "append", "hasClose", "close", "hasFilter", "hasPrependMedia", "hasPrepend", "prepend", "hasColor", "isSelected", "_withDirectives", "_createVNode", "selectedClass", "class", "style", "href", "genOverlays", "VExpandXTransition", "VIcon", "VDefaultsProvider", "icon", "_vShow", "_Fragment", "VAvatar", "image", "start", "select", "end", "_mergeProps", "size", "_resolveDirective"]
}
